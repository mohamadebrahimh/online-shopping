@model Businessdevweb.Models.ContactUs
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<div class="mdl-grid direction-rtl">
    <div class="mdl-cell mdl-cell--12-col">
        <h1 class="mdl-typography--title">@ViewBag.Title</h1>
    </div>
    <div class="mdl-cell mdl-cell--12-col mdl-cell--6-col-desktop">
        
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()
            <div class="mdl-cell mdl-cell--12-col ">
                @if (ViewBag.Message != null)
                {
                    <p class="mdl-color--green">@ViewBag.Message</p>
                }
                @Html.ValidationSummary(true, "", new { @class = "mdl-color-text--red" })
            </div>
                            <div class="mdl-textfield mdl-js-textfield mdl-textfield--floating-label mdl-cell mdl-cell--12-col">

                                @Html.EditorFor(model => model.FullName, new { htmlAttributes = new { @class = "mdl-textfield__input" } })
                                @Html.LabelFor(model => model.FullName, htmlAttributes: new { @class = "mdl-textfield__label ", @for = "FullName" })
                                @Html.ValidationMessageFor(model => model.FullName, "", new { @class = "mdl-textfield__error" })

                            </div>
                            <div class="mdl-textfield mdl-js-textfield mdl-textfield--floating-label mdl-cell mdl-cell--12-col">

                                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "mdl-textfield__input" } })
                                @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "mdl-textfield__label ", @for = "Email" })
                                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "mdl-textfield__error" })

                            </div>
                            <div class="mdl-textfield mdl-js-textfield mdl-textfield--floating-label mdl-cell mdl-cell--12-col">

                                @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "mdl-textfield__input" } })
                                @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "mdl-textfield__label ", @for = "Phone" })
                                @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "mdl-textfield__error" })

                            </div>
                            <div class="mdl-textfield mdl-js-textfield mdl-textfield--floating-label mdl-cell mdl-cell--12-col">

                                @Html.EditorFor(model => model.Message, new { htmlAttributes = new { @class = "mdl-textfield__input" } })
                                @Html.LabelFor(model => model.Message, htmlAttributes: new { @class = "mdl-textfield__label ", @for = "Message" })
                                @Html.ValidationMessageFor(model => model.Message, "", new { @class = "mdl-textfield__error" })

                            </div>
                            <div class="mdl-cell mdl-cell--12-col">
                                <input type="submit" value="ارسال" class="mdl-button mdl-js-button mdl-button--raised mdl-js-ripple-effect mdl-button--colored " />
                                <a href='@(Url.Action("Index"))' class="mdl-button mdl-js-button mdl-button--raised mdl-js-ripple-effect mdl-button--accent ">بازگشت </a>
                            </div>
        }
    </div>
    <div class="mdl-cell mdl-cell--12-col mdl-cell--6-col-desktop direction-rtl">
     
        @if (ViewBag.Description!=null)
        {
            @Html.Raw(ViewBag.Description)
        }
       
    </div>
</div>
<div class="mdl-grid mdl-grid--no-spacing">
    <div id="map" class="mdl-cell mdl-cell--12-col">

    </div>
</div>
@section Banners{


    @{
        if (ViewBag.Banners != null)
            {
                Html.RenderPartial("~/Views/Shared/_PartialBanners.cshtml", (List<Businessdevweb.Models.BannerSlider>)ViewBag.Banners);
            }
        }

    }
@section Footer{
    @{Html.RenderPartial("~/Views/Shared/_PartialFooter.cshtml");}

}

    @section styles{
<style>
    .map {
        height: 330px;
        border-style: solid;
        border-width: 10px;
        border-color: #fff;
        z-index: 9;
    }

    .map-effect {
        position: relative;
        height: 350px;
        background: #FFF;
        margin: 0px auto;
    }

        .map-effect:before, .map-effect:after {
            z-index: -9;
            position: absolute;
            content: "";
            bottom: 15px;
            left: 10px;
            width: 50%;
            top: 80%;
            background: #777;
            -webkit-box-shadow: 0 15px 10px #777;
            -moz-box-shadow: 0 15px 10px #777;
            box-shadow: 0 15px 10px #777;
            -webkit-transform: rotate(-3deg);
            -moz-transform: rotate(-3deg);
            -o-transform: rotate(-3deg);
            -ms-transform: rotate(-3deg);
            transform: rotate(-3deg);
        }

        .map-effect:after {
            -webkit-transform: rotate(3deg);
            -moz-transform: rotate(3deg);
            -o-transform: rotate(3deg);
            -ms-transform: rotate(3deg);
            transform: rotate(3deg);
            right: 10px;
            left: auto;
        }
</style>
@if (ViewBag.Banners != null)
{
        @Styles.Render("~/Content/Slider")
}
    }
    @section scripts{
@if (ViewBag.Banners != null)
{
        @Scripts.Render("~/bundles/Slider")
        <script>

            $('.autoplay').slick({
                dots: true,
                infinite: true,
                slidesToShow: 1,
                slidesToScroll: 1,
                autoplay: true,
                autoplaySpeed: 5000,
                rtl: true,

            });
        </script>
}
<script src="~/Scripts/JavaScriptHelper.js"></script>
@Scripts.Render("~/bundles/jquery")
<script type="text/javascript" src="http://maps.google.com/maps/api/js?sensor=false"></script>
<script>
        load();
        function load() {
            var point = new google.maps.LatLng(35.780811, 51.373838);

            var myMapOptions = {
                zoom: 15,
                disableDefaultUI: true,
                mapTypeControl: true,
                mapTypeControlOptions: {
                    style: google.maps.MapTypeControlStyle.DROPDOWN_MENU
                },
                zoomControl: true,
                zoomControlOptions: {
                    style: google.maps.ZoomControlStyle.SMALL,
                    position: google.maps.ControlPosition.LEFT_TOP
                },
                center: point,
                mapTypeId: google.maps.MapTypeId.ROADMAP
            };

            var map = new google.maps.Map(document.getElementById("map"), myMapOptions);

            var image = new google.maps.MarkerImage(
          '/Content/images/Google-Maps.png',
          new google.maps.Size(128, 128),
          new google.maps.Point(0, 0),
          new google.maps.Point(64, 128)
        );

            var shadow = new google.maps.MarkerImage(
          '/Content/images/Google-Maps.png',
          new google.maps.Size(194, 128),
          new google.maps.Point(0, 0),
          new google.maps.Point(64, 128)
        );

            var shape = {
                coord: [72, 0, 76, 1, 79, 2, 81, 3, 83, 4, 85, 5, 87, 6, 88, 7, 89, 8, 91, 9, 92, 10, 93, 11, 94, 12, 95, 13, 96, 14, 97, 15, 97, 16, 98, 17, 99, 18, 100, 19, 100, 20, 101, 21, 101, 22, 102, 23, 102, 24, 103, 25, 103, 26, 103, 27, 104, 28, 104, 29, 104, 30, 105, 31, 105, 32, 105, 33, 105, 34, 106, 35, 106, 36, 106, 37, 106, 38, 106, 39, 106, 40, 106, 41, 106, 42, 106, 43, 106, 44, 106, 45, 106, 46, 106, 47, 106, 48, 106, 49, 106, 50, 106, 51, 106, 52, 106, 53, 105, 54, 105, 55, 105, 56, 105, 57, 105, 58, 105, 59, 104, 60, 104, 61, 104, 62, 103, 63, 103, 64, 103, 65, 102, 66, 102, 67, 102, 68, 101, 69, 101, 70, 100, 71, 100, 72, 99, 73, 99, 74, 98, 75, 98, 76, 97, 77, 97, 78, 96, 79, 96, 80, 95, 81, 94, 82, 94, 83, 93, 84, 93, 85, 92, 86, 91, 87, 91, 88, 90, 89, 89, 90, 89, 91, 88, 92, 87, 93, 87, 94, 86, 95, 85, 96, 85, 97, 84, 98, 83, 99, 83, 100, 82, 101, 81, 102, 81, 103, 80, 104, 79, 105, 79, 106, 78, 107, 77, 108, 77, 109, 76, 110, 75, 111, 74, 112, 74, 113, 73, 114, 72, 115, 72, 116, 71, 117, 70, 118, 70, 119, 69, 120, 68, 121, 68, 122, 67, 123, 66, 124, 65, 125, 65, 126, 64, 127, 63, 127, 62, 126, 62, 125, 61, 124, 60, 123, 59, 122, 59, 121, 58, 120, 57, 119, 57, 118, 56, 117, 55, 116, 55, 115, 54, 114, 53, 113, 53, 112, 52, 111, 51, 110, 50, 109, 50, 108, 49, 107, 48, 106, 48, 105, 47, 104, 46, 103, 46, 102, 45, 101, 44, 100, 44, 99, 43, 98, 42, 97, 42, 96, 41, 95, 40, 94, 40, 93, 39, 92, 38, 91, 38, 90, 37, 89, 36, 88, 36, 87, 35, 86, 34, 85, 34, 84, 33, 83, 33, 82, 32, 81, 31, 80, 31, 79, 30, 78, 30, 77, 29, 76, 29, 75, 28, 74, 28, 73, 27, 72, 27, 71, 26, 70, 26, 69, 25, 68, 25, 67, 25, 66, 24, 65, 24, 64, 24, 63, 23, 62, 23, 61, 23, 60, 22, 59, 22, 58, 22, 57, 22, 56, 22, 55, 22, 54, 21, 53, 21, 52, 21, 51, 21, 50, 21, 49, 21, 48, 21, 47, 21, 46, 21, 45, 21, 44, 21, 43, 21, 42, 21, 41, 21, 40, 21, 39, 21, 38, 21, 37, 21, 36, 21, 35, 22, 34, 22, 33, 22, 32, 22, 31, 23, 30, 23, 29, 23, 28, 24, 27, 24, 26, 24, 25, 25, 24, 25, 23, 26, 22, 26, 21, 27, 20, 27, 19, 28, 18, 29, 17, 30, 16, 30, 15, 31, 14, 32, 13, 33, 12, 34, 11, 35, 10, 36, 9, 38, 8, 39, 7, 40, 6, 42, 5, 44, 4, 46, 3, 48, 2, 51, 1, 55, 0, 72, 0],
                type: 'poly'
            };

            var marker = new google.maps.Marker({
                draggable: false,
                animation: google.maps.Animation.DROP,
                icon: image,
                shadow: shadow,
                shape: shape,
                map: map,
                position: point
            });

        }
</script>
    }

