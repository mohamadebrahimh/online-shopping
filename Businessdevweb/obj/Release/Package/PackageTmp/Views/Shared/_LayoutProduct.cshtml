<!DOCTYPE html>
<html lang="fa">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link href="~/favicon.png" rel="shortcut icon">
    <title>@ViewBag.Title</title>
    @Styles.Render("~/Content/css")
    @RenderSection("styles", required: false)
    <link href="~/Content/multizoom.css" rel="stylesheet" />

    <meta property="og:locale" content="fa_IR" />
    <meta property="og:type" content="website" />
    <meta property="og:title" content="@ViewBag.Title" />
    <meta property="og:description" content="@ViewBag.MetaDescription" />
    <meta property="og:url" content="@ViewBag.Url" />
    <meta property="og:site_name" content="@ViewBag.SiteName | @ViewBag.Title" />
    <meta property="og:image" content="@(ViewBag.Url+ViewBag.Image)" />
    <meta property="og:image:width" content="640" />
    <meta property="og:image:height" content="640" />

    <style>
        .head-bg-product {
            min-height: 200px;
            padding-bottom: 50px;
            width: 100%;
            background: url(Content/bg2.jpg) top fixed rgba(128, 128, 128, 0.80);
            background-size: 100%;
            /*-webkit-filter: blur(3px);
            filter: blur(3px);*/
            background-repeat: no-repeat;
        }

        .head-bg {
            min-height: 200px;
            padding-bottom: 50px;
            width: 100%;
            background: url(Content/bg2.jpg) top fixed;
            background-size: 100%;
            /*-webkit-filter: blur(3px);
            filter: blur(3px);*/
            background-repeat: no-repeat;
        }

        .head-title {
            padding-right: 10px;
            min-height: 100px;
            height: 75px;
            width: 100%;
            border-top: 5px solid rgba(0, 0, 0, 0.50);
            border-bottom: 1px solid rgba(0, 0, 0, 0.50);
        }

        .link-best-right {
            white-space: nowrap;
            overflow: hidden;
            text-overflow: ellipsis;
            text-decoration: none;
            color: black;
            text-align: right;
            font-size: large;
            position: absolute;
            display: block;
            float: right;
            right: 0;
            left: 50px;
            height: 50px;
            padding-right: 10px;
        }

        .link-best-left {
            white-space: nowrap;
            overflow: hidden;
            text-overflow: ellipsis;
            text-decoration: none;
            color: black;
            text-align: right;
            font-size: large;
            position: absolute;
            display: block;
            float: right;
            right: 50px;
            left: 0;
            height: 50px;
            padding-left: 10px;
        }

        .card {
            display: block;
            overflow: hidden;
        }

        .card-details > .card-details-title {
            -webkit-transition: opacity 2s; /* For Safari 3.1 to 6.0 */
            transition: opacity 2s;
            opacity: 0;
            position: relative;
            display: block;
            height: 40px;
            overflow: hidden;
            margin: 0 10px;
            border-bottom: 1px solid rgba(0, 0, 0, 0.50);
        }

        .card-details-title > .card-details-title__text {
            position: absolute;
            display: inline-block;
            left: 45px;
            right: 0;
            height: 40px;
            text-overflow: ellipsis;
            white-space: nowrap;
            color: black;
            font-size: large;
            line-height: 40px;
        }

        .card-details {
            position: absolute;
            display: block;
            left: 0;
            right: 0;
            height: 100%;
            -webkit-transition: bottom 1s; /* For Safari 3.1 to 6.0 */
            transition: bottom 1s;
            bottom: -100%;
            background: rgba(255, 255, 255, 0.70);
            overflow: hidden;
        }

            .card-details > .card-details-description__text {
                -webkit-transition: opacity 2s; /* For Safari 3.1 to 6.0 */
                transition: opacity 2s;
                opacity: 0;
                position: relative;
                display: block;
                height: 90px;
                overflow: hidden;
                font-size: small;
                color: black;
                line-height: 30px;
                padding-left: 10px;
                padding-right: 10px;
                text-decoration: none;
            }

        .card-details-title > .card-details-menu {
            position: absolute;
            display: inline-block;
            top: 0;
            width: 40px;
            left: 0;
        }

        .card:hover > .card-details {
            bottom: 0;
        }

            .card:hover > .card-details > .card-details-description__text,
            .card:hover > .card-details > .card-details-title {
                bottom: 0;
                opacity: 1;
            }
    </style>

</head>
<body>


        <div class="mdl-layout mdl-light mdl-js-layout  mdl-color-text--black md-light">
            <header class="mdl-layout__header mdl-color--grey-100 mdl-color-text--black direction-rtl">
                <div class="mdl-layout__header-row ">
                    <!-- Title -->
                    <span class="mdl-layout-title mdl-logo">
                        <img src="~/Content/daylogo1.png" height="40" />
                    </span>

                    <style>
                        button.mdl-navigation__link {
                            font-family: 'Yekan';
                            background: transparent;
                            border: none;
                            cursor: pointer;
                            text-align: center;
                            vertical-align: middle;
                            display: inline-block;
                        }

                            button.mdl-navigation__link.is-active {
                                background-color: rgba(0, 0, 0, 0.20);
                            }

                        .menu-cat {
                            position: absolute;
                            display: block;
                            left: 20px;
                            top: 65px;
                            right: 20px;
                            bottom: 0;
                            opacity: 0;
                            display: none;
                            z-index: 999;
                        }

                        .menu-cat-item {
                            position: relative;
                            display: block;
                            top: 0;
                            z-index: 1000;
                            height: 50px;
                        }

                            .menu-cat-item button.mdl-navigation__link {
                                position: relative;
                                line-height: unset;
                                height: 100%;
                                min-height: 100%;
                                margin: 0;
                                padding-top: 0;
                                vertical-align: middle;
                                display: inline-block;
                            }

                                .menu-cat-item button.mdl-navigation__link.is-active {
                                    background-color: rgba(0, 0, 0, 0.20);
                                }

                        .menu-cat-item-childs {
                            position: relative;
                            border-top: 1px solid rgba(128, 128, 128, 0.90);
                            z-index: 1000;
                            height: 300px;
                            max-height: 300px;
                            overflow: hidden;
                            opacity: 0;
                            display: none;
                            overflow-y: auto;
                        }

                            .menu-cat-item-childs.is-visible {
                                opacity: 1;
                                cursor: auto;
                                display: block;
                            }

                        .menu-cat.childs > .divAfter {
                            position: absolute;
                            display: block;
                            top: 265px;
                            left: 0;
                            right: 0;
                            bottom: 0;
                        }

                        .menu-cat > .divAfter {
                            position: absolute;
                            display: block;
                            top: 65px;
                            left: 0;
                            right: 0;
                            bottom: 0;
                        }

                        .menu-cat.is-visible {
                            display: block;
                            opacity: 1;
                            cursor: auto;
                        }
                    </style>
                    @{Html.RenderPartial("~/Views/Shared/_PartialHeaderMenu.cshtml", ViewData["Categories"]);}

                    <nav class="mdl-navigation mdl-color-text--black">
                        <a class="mdl-navigation__link mdl-color-text--black" href="~/ارتباط-باما">ارتباط با ما</a>
                        <a class="mdl-navigation__link mdl-color-text--black" href="~/درباره-ما">درباره ما</a>
                    </nav>
                    <!-- Add spacer, to align navigation to the left -->
                    <div class="mdl-layout-spacer"></div>
                    <!-- Navigation. We hide it in small screens. -->


                </div>

            </header>
            <div class="mdl-layout__drawer direction-rtl">
                <span class="mdl-layout-title">دی تحریر</span>

                @{Html.RenderPartial("~/Views/Shared/_PartialDrawerMenu.cshtml");}
            </div>

            <main class="mdl-layout__content">
                <div class="page-content">
                 <div class="mdl-grid mdl-grid--no-spacing direction-rtl">
                     <div class="mdl-cell mdl-cell--12-col">
                         @RenderSection("Banners", required: false)
                         @RenderBody()
                     </div>
                 </div>




                        @RenderSection("Footer", required: false)
                  

                </div><!-- Your content goes here -->
            </main>
        </div>



    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/Material")
    <script>

        var menuCats = document.querySelectorAll('.menu-cat');
        for (var i = 0; i < menuCats.length; i++) {

            var elem = menuCats.item(i);

            document.getElementById(elem.getAttribute('for')).addEventListener("click", function () {
                elem = document.querySelector('.menu-cat[for="' + this.id + '"]');
                if (elem.classList.contains("is-visible")) {
                    var childs = elem.querySelectorAll(".menu-cat-item-childs.is-visible")
                    for (var i = 0; i < childs.length; i++) {
                        var btn = childs.item(i);
                        childs.item(i).classList.remove("is-visible");

                        document.getElementById(btn.getAttribute('for')).classList.remove("is-active");
                    }
                    this.classList.remove('is-active');
                    elem.classList.remove('is-visible');
                    elem.classList.remove('childs');
                } else {
                    var isVisible = document.querySelectorAll('.menu-cat.is-visible');
                    for (var j = 0; j < isVisible.length; j++) {
                        var childs = isVisible.item(j).querySelectorAll(".menu-cat-item-childs.is-visible")
                        for (var i = 0; i < childs.length; i++) {
                            var btn = childs.item(i);
                            childs.item(i).classList.remove("is-visible");
                            document.getElementById(btn.getAttribute('for')).classList.remove("is-active");
                        }

                        document.getElementById(isVisible.item(j).getAttribute('for')).classList.remove("is-active");
                        isVisible.item(j).classList.remove("is-visible");
                        isVisible.item(j).classList.remove("childs");
                    }
                    this.classList.add("is-active");
                    elem.classList.add('is-visible');
                }
            }
            , true);
//            document.getElementById(elem.getAttribute('for')).addEventListener("mouseover", function () {
//                elem = document.querySelector('.menu-cat[for="' + this.id + '"]');
//                if (elem.classList.contains("is-visible")) {
//                    var childs = elem.querySelectorAll(".menu-cat-item-childs.is-visible")
//                    for (var i = 0; i < childs.length; i++) {
//                        var btn = childs.item(i);
//                        childs.item(i).classList.remove("is-visible");
//                        document.getElementById(btn.getAttribute('for')).classList.remove("is-active");
//                    }
//                    this.classList.remove('is-active');
//                    elem.classList.remove('is-visible');
//                    elem.classList.remove('childs');
//                } else {
//                    var isVisible = document.querySelectorAll('.menu-cat.is-visible');
//                    for (var j = 0; j < isVisible.length; j++) {
//                        var childs = isVisible.item(j).querySelectorAll(".menu-cat-item-childs.is-visible")
//                        for (var i = 0; i < childs.length; i++) {
//                            var btn = childs.item(i);
//                            childs.item(i).classList.remove("is-visible");
//                            document.getElementById(btn.getAttribute('for')).classList.remove("is-active");
//                        }
//                        document.getElementById(isVisible.item(j).getAttribute('for')).classList.remove("is-active");
//                        isVisible.item(j).classList.remove("is-visible");
//                        isVisible.item(j).classList.remove("childs");
//                    }
//                    this.classList.add("is-active");
//                    elem.classList.add('is-visible');
//                }
//            }
//, true);
//            document.getElementById(elem.getAttribute('for')).addEventListener("touchstart", function () {
//                elem = document.querySelector('.menu-cat[for="' + this.id + '"]');
//                if (elem.classList.contains("is-visible")) {
//                    var childs = elem.querySelectorAll(".menu-cat-item-childs.is-visible")
//                    for (var i = 0; i < childs.length; i++) {
//                        var btn = childs.item(i);
//                        childs.item(i).classList.remove("is-visible");
//                        document.getElementById(btn.getAttribute('for')).classList.remove("is-active");
//                    }
//                    this.classList.remove('is-active');
//                    elem.classList.remove('is-visible');
//                    elem.classList.remove('childs');
//                } else {
//                    var isVisible = document.querySelectorAll('.menu-cat.is-visible');
//                    for (var j = 0; j < isVisible.length; j++) {
//                        var childs = isVisible.item(j).querySelectorAll(".menu-cat-item-childs.is-visible")
//                        for (var i = 0; i < childs.length; i++) {
//                            var btn = childs.item(i);
//                            childs.item(i).classList.remove("is-visible");
//                            document.getElementById(btn.getAttribute('for')).classList.remove("is-active");
//                        }
//                        document.getElementById(isVisible.item(j).getAttribute('for')).classList.remove("is-active");
//                        isVisible.item(j).classList.remove("is-visible");
//                        isVisible.item(j).classList.remove("childs");
//                    }
//                    this.classList.add("is-active");
//                    elem.classList.add('is-visible');
//                }
//            }
//, true);
            var newElement = document.createElement('div');
            newElement.classList.add('divAfter');
            newElement.addEventListener("click", function () {
                var isVisible = document.querySelectorAll('.menu-cat.is-visible');
                for (var j = 0; j < isVisible.length; j++) {
                    var childs = isVisible.item(j).querySelectorAll(".menu-cat-item-childs.is-visible")
                    for (var i = 0; i < childs.length; i++) {
                        childs.item(i).classList.remove("is-visible");
                        var btn = childs.item(i);
                        document.getElementById(btn.getAttribute('for')).classList.remove("is-active");
                    }

                    document.getElementById(isVisible.item(j).getAttribute('for')).classList.remove("is-active");
                    isVisible.item(j).classList.remove("is-visible");
                    isVisible.item(j).classList.remove('childs');
                }

            }, true);
            //newElement.addEventListener("touchstart", function () {
            //    var isVisible = document.querySelectorAll('.menu-cat.is-visible');
            //    for (var j = 0; j < isVisible.length; j++) {
            //        var childs = isVisible.item(j).querySelectorAll(".menu-cat-item-childs.is-visible")
            //        for (var i = 0; i < childs.length; i++) {
            //            childs.item(i).classList.remove("is-visible");
            //            var btn = childs.item(i);
            //            document.getElementById(btn.getAttribute('for')).classList.remove("is-active");
            //        }
            //        document.getElementById(isVisible.item(j).getAttribute('for')).classList.remove("is-active");
            //        isVisible.item(j).classList.remove("is-visible");
            //        isVisible.item(j).classList.remove('childs');
            //    }
            //}, true);
            //newElement.addEventListener("mouseover", function () {
            //    var isVisible = document.querySelectorAll('.menu-cat.is-visible');
            //    for (var j = 0; j < isVisible.length; j++) {
            //        var childs = isVisible.item(j).querySelectorAll(".menu-cat-item-childs.is-visible")
            //        for (var i = 0; i < childs.length; i++) {
            //            childs.item(i).classList.remove("is-visible");
            //            var btn = childs.item(i);
            //            document.getElementById(btn.getAttribute('for')).classList.remove("is-active");
            //        }
            //        document.getElementById(isVisible.item(j).getAttribute('for')).classList.remove("is-active");
            //        isVisible.item(j).classList.remove("is-visible");
            //        isVisible.item(j).classList.remove('childs');
            //    }
            //}, true);
            elem.appendChild(newElement);
        }
        var childs = document.querySelectorAll('.menu-cat .menu-cat-item-childs');
        if (childs.length > 0) {
            ApplyMenuCatItemChilds(childs);
        }
        function ApplyMenuCatItemChilds(childs) {
            for (var i = 0; i < childs.length; i++) {
                var elem = childs.item(i);
                if (elem !== null) {
                    document.getElementById(elem.getAttribute('for')).addEventListener("click",function () {
                        elem = document.querySelector('.menu-cat-item-childs[for="' + this.id + '"]');
                        if (elem.classList.contains("is-visible")) {
                            elem.classList.remove('is-visible');
                            this.parentElement.parentElement.classList.remove('childs');

                            this.classList.remove("is-active");
                        } else {
                            var isVisible = document.querySelectorAll('.menu-cat-item-childs.is-visible');
                            for (var j = 0; j < isVisible.length; j++) {
                                document.getElementById(isVisible.item(j).getAttribute('for')).classList.remove("is-active");
                                isVisible.item(j).classList.remove("is-visible");
                                isVisible.item(j).parentElement.parentElement.classList.remove('childs');
                            }
                            elem.classList.add('is-visible');

                            this.classList.add("is-active");
                            this.parentElement.parentElement.classList.add('childs');
                        }
                    }
                , true);
               //     document.getElementById(elem.getAttribute('for')).addEventListener("mouseover",function () {
               //         elem = document.querySelector('.menu-cat-item-childs[for="' + this.id + '"]');
               //         if (elem.classList.contains("is-visible")) {
               //             elem.classList.remove('is-visible');
               //             this.parentElement.parentElement.classList.remove('childs');
               //             this.classList.remove("is-active");
               //         } else {
               //             var isVisible = document.querySelectorAll('.menu-cat-item-childs.is-visible');
               //             for (var j = 0; j < isVisible.length; j++) {
               //                 document.getElementById(isVisible.item(j).getAttribute('for')).classList.remove("is-active");
               //                 isVisible.item(j).classList.remove("is-visible");
               //                 isVisible.item(j).parentElement.parentElement.classList.remove('childs');
               //             }
               //             elem.classList.add('is-visible');
               //             this.classList.add("is-active");
               //             this.parentElement.parentElement.classList.add('childs');
               //         }
               //     }
               //, true);
//                    document.getElementById(elem.getAttribute('for')).addEventListener("touchstart", function () {
//                        elem = document.querySelector('.menu-cat-item-childs[for="' + this.id + '"]');
//                        if (elem.classList.contains("is-visible")) {
//                            elem.classList.remove('is-visible');
//                            this.parentElement.parentElement.classList.remove('childs');
//                            this.classList.remove("is-active");
//                        } else {
//                            var isVisible = document.querySelectorAll('.menu-cat-item-childs.is-visible');
//                            for (var j = 0; j < isVisible.length; j++) {
//                                document.getElementById(isVisible.item(j).getAttribute('for')).classList.remove("is-active");
//                                isVisible.item(j).classList.remove("is-visible");
//                                isVisible.item(j).parentElement.parentElement.classList.remove('childs');
//                            }
//                            elem.classList.add('is-visible');
//                            this.classList.add("is-active");
//                            this.parentElement.parentElement.classList.add('childs');
//                        }
//                    }
//, true);
                }
            }
        }



    </script>

    @RenderSection("scripts", required: false)
</body>
</html>
